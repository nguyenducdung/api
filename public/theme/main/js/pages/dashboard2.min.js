$(function() {
    "use strict";
    var t = {
     chart: {
      height: 383,
      type: "line",
      shadow: {
       enabled: !1,
       color: "#bbb",
       top: 3,
       left: 2,
       blur: 3,
       opacity: 1
      }
     },
     stroke: {
      width: 10,
      curve: "smooth"
     },
     series: [{
      name: "Likes",
      data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5]
     }],
     xaxis: {
      type: "datetime",
      categories: ["1/11/2000", "2/11/2000", "3/11/2000", "4/11/2000", "5/11/2000", "6/11/2000", "7/11/2000", "8/11/2000", "9/11/2000", "10/11/2000", "11/11/2000", "12/11/2000", "1/11/2001", "2/11/2001", "3/11/2001", "4/11/2001", "5/11/2001", "6/11/2001"],
      axisBorder: {
       show: !0,
       color: "#bec7e0"
      },
      axisTicks: {
       show: !0,
       color: "#bec7e0"
      }
     },
     fill: {
      type: "gradient",
      gradient: {
       shade: "dark",
       gradientToColors: ["#5A8DEE"],
       shadeIntensity: 1,
       type: "horizontal",
       opacityFrom: 1,
       opacityTo: 1,
       stops: [0, 100, 100, 100]
      }
     },
     markers: {
      size: 5,
      opacity: .9,
      colors: ["#ffffff"],
      strokeColor: "#5A8DEE",
      strokeWidth: 2,
      style: "inverted",
      hover: {
       size: 7
      }
     },
     yaxis: {
      min: -10,
      max: 40,
      title: {
       text: "Engagement"
      }
     },
     grid: {
      row: {
       colors: ["transparent", "transparent"],
       opacity: .2
      },
      borderColor: "#f7f7f7"
     },
     responsive: [{
      breakpoint: 600,
      options: {
       chart: {
        toolbar: {
         show: !1
        }
       },
       legend: {
        show: !1
       }
      }
     }]
    };
    new ApexCharts(document.querySelector("#growth"), t).render();
    t = {
     series: [{
      name: "series1",
      data: [178, 223, 195, 201, 143, 189, 156, 155, 118, 167, 159]
     }],
     chart: {
      height: 162,
      width: 600,
      type: "line",
      offsetY: 0,
      offsetX: -50
     },
     colors: ["#FF5B5C"],
     dataLabels: {
      enabled: !1
     },
     stroke: {
      curve: "smooth"
     },
     markers: {
      size: 0
     },
     yaxis: {
      axisBorder: {
       show: !1
      },
      axisTicks: {
       show: !1
      },
      labels: {
       show: !1
      }
     },
     xaxis: {
      axisBorder: {
       show: !1
      },
      axisTicks: {
       show: !1
      },
      labels: {
       show: !1,
       formatter: function(t) {
        return t
       }
      }
     },
     grid: {
      show: !0,
      borderColor: "#5A8DEE",
      strokeDashArray: 0,
      position: "back",
      xaxis: {
       lines: {
        show: !1
       }
      },
      yaxis: {
       lines: {
        show: !1
       }
      },
      row: {
       colors: void 0,
       opacity: .5
      },
      column: {
       colors: void 0,
       opacity: .1
      }
     }
    };
    new ApexCharts(document.querySelector("#statisticschart3"), t).render();
    t = {
     series: [{
      name: "Inflation",
      data: [189, 156, 123, 118]
     }],
     chart: {
      height: 165,
      type: "bar"
     },
     plotOptions: {
      bar: {
       dataLabels: {
        position: "top"
       },
       columnWidth: "30%",
       endingShape: "rounded"
      }
     },
     dataLabels: {
      enabled: !1
     },
     tooltip: {
      enabled: !1
     },
     colors: ["#ffffff"],
     xaxis: {
      categories: ["Jan", "Feb", "Mar", "Apr"],
      position: "bottom",
      labels: {
       show: !0,
       style: {
        colors: ["#ffffff", "#ffffff", "#ffffff", "#ffffff"]
       }
      },
      axisBorder: {
       show: !1
      },
      axisTicks: {
       show: !1
      }
     },
     grid: {
      yaxis: {
       lines: {
        show: !1
       }
      }
     },
     yaxis: {
      axisBorder: {
       show: !1
      },
      axisTicks: {
       show: !1
      },
      labels: {
       show: !1,
       formatter: function(t) {
        return t + "%"
       }
      }
     }
    };
    new ApexCharts(document.querySelector("#meetingschart"), t).render();
    new ApexCharts(document.querySelector("#visitors-char"), {
     series: [{
      data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]
     }],
     chart: {
      type: "line",
      width: 150,
      height: 50,
      sparkline: {
       enabled: !0
      }
     },
     stroke: {
      curve: "smooth",
      width: 3
     },
     markers: {
      size: 0
     },
     tooltip: {
      fixed: {
       enabled: !1
      },
      x: {
       show: !1
      },
      y: {
       title: {
        formatter: function(t) {
         return ""
        }
       }
      },
      marker: {
       show: !1
      }
     }
    }).render(),

     Morris.Area({
     element: "area-chart3",
     data: [{
      period: "2013",
      data1: 0,
      data2: 0
     }, {
      period: "2014",
      data1: 55,
      data2: 20
     }, {
      period: "2015",
      data1: 25,
      data2: 55
     }, {
      period: "2016",
      data1: 65,
      data2: 17
     }, {
      period: "2017",
      data1: 35,
      data2: 25
     }, {
      period: "2018",
      data1: 30,
      data2: 85
     }, {
      period: "2019",
      data1: 15,
      data2: 15
     }],
     lineColors: ["#5A8DEE", "#FF5B5C"],
     xkey: "period",
     ykeys: ["data1", "data2"],
     labels: ["Data 1", "Data 2"],
     pointSize: 2,
     padding: 0,
     lineWidth: 2,
     resize: !0,
     fillOpacity: .1,
     behaveLikeLine: !0,
     gridLineColor: "#ffffff0",
     hideHover: "auto",
     axes: !1
    });
    t = {
     series: [{
      name: "New Visitors",
      data: [70, 45, 51, 58, 59, 58, 61, 65, 60, 69]
     }, {
      name: "Unique Visitors",
      data: [55, 71, 80, 100, 89, 98, 110, 95, 116, 90]
     }],
     chart: {
      type: "bar",
      height: 350
     },
     colors: ["#5A8DEE", "#e5edfc"],
     plotOptions: {
      bar: {
       horizontal: !1,
       columnWidth: "50%",
       endingShape: "rounded"
      }
     },
     dataLabels: {
      enabled: !1
     },
     grid: {
      show: !1
     },
     stroke: {
      show: !1,
      width: 0,
      colors: ["transparent"]
     },
     xaxis: {
      categories: ["Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan"]
     },
     yaxis: {
      axisBorder: {
       show: !1
      },
      axisTicks: {
       show: !1
      },
      labels: {
       show: !1
      }
     },
     fill: {
      opacity: 1
     },
     tooltip: {
      y: {
       formatter: function(t) {
        return "$ " + t + " thousands"
       }
      }
     }
    };
    new ApexCharts(document.querySelector("#profit"), t).render()
   });
   var Widgetschart = function() {
    var t = function(t, e, a, r, n, i, o, s) {
     if ("undefined" != typeof d3) {
      if (t) {
       for (var d = d3.select(t), l = {
         top: 0,
         right: 0,
         bottom: 0,
         left: 0
        }, c = d.node().getBoundingClientRect().width - l.left - l.right, h = r - l.top - l.bottom, f = [], u = 0; u < a; u++) f.push(Math.floor(Math.random() * a) + 5);
       var p = d3.scale.linear().range([0, c]),
        m = d3.scale.linear().range([h - 5, 5]);
       p.domain([1, a - 3]), m.domain([0, a]);
       var g = d3.svg.line().interpolate(n).x(function(t, e) {
         return p(e)
        }).y(function(t, e) {
         return m(t)
        }),
        w = d3.svg.area().interpolate(n).x(function(t, e) {
         return p(e)
        }).y0(h).y1(function(t) {
         return m(t)
        }),
        y = d.append("svg"),
        b = y.attr("width", c + l.left + l.right).attr("height", h + l.top + l.bottom).append("g").attr("transform", "translate(" + l.left + "," + l.top + ")"),
        x = b.append("defs").append("clipPath").attr("id", function(e, a) {
         return "load-clip-" + t.substring(1)
        }).append("rect").attr("class", "load-clip").attr("width", 0).attr("height", h);
       x.transition().duration(1e3).ease("linear").attr("width", c);
       var v = b.append("g").attr("clip-path", function(e, a) {
        return "url(#load-clip-" + t.substring(1) + ")"
       }).append("path").datum(f).attr("transform", "translate(" + p(0) + ",0)");

       function k() {
        c = d.node().getBoundingClientRect().width - l.left - l.right, y.attr("width", c + l.left + l.right), b.attr("width", c + l.left + l.right), p.range([0, c]), x.attr("width", c), b.select(".d3-line").attr("d", g), b.select(".d3-area").attr("d", w)
       }
       "area" == e ? v.attr("d", w).attr("class", "d3-area").style("fill", s) : v.attr("d", g).attr("class", "d3-line d3-line-medium").style("stroke", s), v.style("opacity", 0).transition().duration(500).style("opacity", 1), setInterval(function() {
        f.push(Math.floor(Math.random() * a) + 5), f.shift(), v.attr("transform", null).transition().duration(i).ease("linear").attr("transform", "translate(" + p(0) + ",0)"), "area" == e ? v.attr("d", w).attr("class", "d3-area").style("fill", s) : v.attr("d", g).attr("class", "d3-line d3-line-medium").style("stroke", s)
       }, o), $(window).on("resize", k), $(document).on("click", ".sidebar-control", k)
      }
     } else console.warn("Warning - d3.min.js is not loaded.")
    };
    return {
     init: function() {
      ! function(t, e, a, r, n, i, o, s, d) {
       if ("undefined" != typeof d3) {
        if (t) {
         for (var l = [], c = 0; c < e; c++) l.push(Math.round(10 * Math.random()) + 10);
         var h = d3.select(t),
          f = h.node().getBoundingClientRect().width,
          u = d3.scale.ordinal().rangeBands([0, f], .3),
          p = d3.scale.linear().range([0, a]);
         u.domain(d3.range(0, l.length)), p.domain([0, d3.max(l)]);
         var m = h.append("svg"),
          g = m.attr("width", f).attr("height", a).append("g"),
          w = g.selectAll("rect").data(l).enter().append("rect").attr("class", "d3-random-bars").attr("width", u.rangeBand()).attr("x", function(t, e) {
           return u(e)
          }).style("fill", s),
          y = d3.tip().attr("class", "d3-tip").offset([-10, 0]);

         function b() {
          f = h.node().getBoundingClientRect().width, m.attr("width", f), g.attr("width", f), u.rangeBands([0, f], .3), g.selectAll(".d3-random-bars").attr("width", u.rangeBand()).attr("x", function(t, e) {
           return u(e)
          })
         }
         "hours" != d && "goal" != d && "members" != d || w.call(y).on("mouseover", y.show).on("mouseout", y.hide), "hours" == d && y.html(function(t, e) {
          return "<div class='text-center'><h6 class='mb-0'>" + t + "</h6><span class='font-size-16'>meetings</span><div class='font-size-16'>" + e + ":00</div></div>"
         }), "goal" == d && y.html(function(t, e) {
          return "<div class='text-center'><h6 class='mb-0'>" + t + "</h6><span class='font-size-16'>statements</span><div class='font-size-16'>" + e + ":00</div></div>"
         }), "members" == d && y.html(function(t, e) {
          return "<div class='text-center bg-dark p-5'><h6 class='mb-0'>" + t + "0</h6><span class='font-size-14'>members</span><div class='font-size-14'>" + e + ":00</div></div>"
         }), r ? w.attr("height", 0).attr("y", a).transition().attr("height", function(t) {
          return p(t)
         }).attr("y", function(t) {
          return a - p(t)
         }).delay(function(t, e) {
          return e * o
         }).duration(i).ease(n) : w.attr("height", function(t) {
          return p(t)
         }).attr("y", function(t) {
          return a - p(t)
         }), $(window).on("resize", b), $(document).on("click", ".sidebar-control", b)
        }
       } else console.warn("Warning - d3.min.js is not loaded.")
      }("#chart_bar_basic", 24, 50, !0, "elastic", 1200, 50, "#5A8DEE", "members"),
      function(t, e, a, r, n, i) {
       if ("undefined" != typeof d3) {
        if (t) {
         var o = [{
           date: "04/13/14",
           alpha: "60"
          }, {
           date: "04/14/14",
           alpha: "35"
          }, {
           date: "04/15/14",
           alpha: "65"
          }, {
           date: "04/16/14",
           alpha: "50"
          }, {
           date: "04/17/14",
           alpha: "65"
          }, {
           date: "04/18/14",
           alpha: "20"
          }, {
           date: "04/19/14",
           alpha: "60"
          }],
          s = d3.select(t),
          d = {
           top: 0,
           right: 0,
           bottom: 0,
           left: 0
          },
          l = s.node().getBoundingClientRect().width - d.left - d.right,
          c = e - d.top - d.bottom,
          h = 20,
          f = d3.time.format("%m/%d/%y").parse,
          u = d3.time.format("%a, %B %e"),
          p = d3.tip().attr("class", "d3-tip").html(function(t) {
           return "<ul class='list-unstyled mb-1 bg-dark p-5'><li><div class='my-1'><i class='fa fa-check mr-2'></i>" + u(t.date) + "</div></li><li>Sales: &nbsp;<span class='float-right'>" + t.alpha + "</span></li><li>Revenue: &nbsp; <span class='float-right'>$" + (0 * t.alpha).toFixed(2) + "</span></li></ul>"
          }),
          m = s.append("svg"),
          g = m.attr("width", l + d.left + d.right).attr("height", c + d.top + d.bottom).append("g").attr("transform", "translate(" + d.left + "," + d.top + ")").call(p);
         o.forEach(function(t) {
          t.date = f(t.date), t.alpha = +t.alpha
         });
         var w = d3.time.scale().range([h, l - h]),
          y = d3.scale.linear().range([c, 5]);
         w.domain(d3.extent(o, function(t) {
          return t.date
         })), y.domain([0, d3.max(o, function(t) {
          return Math.max(t.alpha)
         })]);
         var b = d3.svg.line().x(function(t) {
           return w(t.date)
          }).y(function(t) {
           return y(t.alpha)
          }),
          x = g.append("defs").append("clipPath").attr("id", "clip-line-small").append("rect").attr("class", "clip").attr("width", 0).attr("height", c);
         x.transition().duration(1e3).ease("linear").attr("width", l), g.append("path").attr({
          d: b(o),
          "clip-path": "url(#clip-line-small)",
          class: "d3-line d3-line-medium"
         }).style("stroke", a), g.select(".line-tickets").transition().duration(1e3).ease("linear");
         var v = g.append("g").selectAll(".d3-line-guides-group").data(o);
         v.enter().append("line").attr("class", "d3-line-guides").attr("x1", function(t, e) {
          return w(t.date)
         }).attr("y1", function(t, e) {
          return c
         }).attr("x2", function(t, e) {
          return w(t.date)
         }).attr("y2", function(t, e) {
          return c
         }).style("stroke", r).style("stroke-dasharray", "4,2").style("shape-rendering", "crispEdges"), v.transition().duration(1e3).delay(function(t, e) {
          return 150 * e
         }).attr("y2", function(t, e) {
          return y(t.alpha)
         });
         var k = g.insert("g").selectAll(".d3-line-circle").data(o).enter().append("circle").attr("class", "d3-line-circle d3-line-circle-medium").attr("cx", b.x()).attr("cy", b.y()).attr("r", 3).style({
          stroke: n,
          fill: i
         });

         function A() {
          l = s.node().getBoundingClientRect().width - d.left - d.right, m.attr("width", l + d.left + d.right), g.attr("width", l + d.left + d.right), w.range([h, l - h]), x.attr("width", l), g.selectAll(".d3-line").attr("d", b(o)), g.selectAll(".d3-line-circle").attr("cx", b.x()), g.selectAll(".d3-line-guides").attr("x1", function(t, e) {
           return w(t.date)
          }).attr("x2", function(t, e) {
           return w(t.date)
          })
         }
         k.style("opacity", 0).transition().duration(250).ease("linear").delay(1e3).style("opacity", 1), k.on("mouseover", function(t) {
          p.offset([-10, 0]).show(t), d3.select(this).transition().duration(250).attr("r", 4)
         }).on("mouseout", function(t) {
          p.hide(t), d3.select(this).transition().duration(250).attr("r", 3)
         }), d3.select(k[0][0]).on("mouseover", function(t) {
          p.offset([0, 10]).direction("e").show(t), d3.select(this).transition().duration(250).attr("r", 4)
         }).on("mouseout", function(t) {
          p.direction("n").hide(t), d3.select(this).transition().duration(250).attr("r", 3)
         }), d3.select(k[0][k.size() - 1]).on("mouseover", function(t) {
          p.offset([0, -10]).direction("w").show(t), d3.select(this).transition().duration(250).attr("r", 4)
         }).on("mouseout", function(t) {
          p.direction("n").hide(t), d3.select(this).transition().duration(250).attr("r", 3)
         }), $(window).on("resize", A), $(document).on("click", ".sidebar-control", A)
        }
       } else console.warn("Warning - d3.min.js is not loaded.")
      }("#line_chart_simple", 50, "#FDAC41", "#FDAC41", "#FDAC41", "#fff"), t("#sparklines_basic", "area", 30, 50, "basis", 750, 2e3, "#FF5B5C")
     }
    }
   }();
   document.addEventListener("DOMContentLoaded", function() {
    Widgetschart.init()
   });
